# fly/frontend/nginx.conf

server {
    listen 8080;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip Settings (unchanged)
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # API Proxy to GCP Backend (unchanged)
    location ~ ^/(api|management|v3/api-docs)/ {
        resolver 8.8.8.8;
        set $backend_url https://zoranstepanoski-prof-api-yqlyfjxyeq-lm.a.run.app;
        proxy_pass $backend_url$request_uri;
        proxy_set_header Host "zoranstepanoski-prof-api-yqlyfjxyeq-lm.a.run.app";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Origin $http_origin;
        proxy_redirect off;
    }

    # === NEW: SECURE THE LOGIN ROUTE ===
    # This block adds protection specifically for the /login URL.
    # It must come BEFORE the general SPA fallback rule.
    location = /login {
        # IMPORTANT: Replace the placeholder below with your own long, random secret key.
        # Use a password generator to create a strong one.
        set $admin_secret "kSg8v3y_dF9aP-2hJ7rQz"; # <-- EXAMPLE SECRET, CREATE YOUR OWN!

        # Check if the query argument "admin_key" does NOT match our secret.
        if ($arg_admin_key != $admin_secret) {
            # If the key is missing or wrong, return a 404 Not Found error.
            # This hides the fact that the login page even exists.
            return 404;
        }

        # If the key is correct, let Angular handle the request.
        try_files $uri $uri/ /index.html;
    }

    # SPA Fallback for all other Angular routes (unchanged)
    location / {
        try_files $uri $uri/ /index.html;
    }
}
